// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VamosTodos_Test.Persistence;

#nullable disable

namespace VamosTodos_Test.Persistence.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VamosTodos_Test.Domain.Bug.BugEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("BugEntity");
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.Project.ProjectAggregateRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProjectAggregateRoot");
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.User.UserAggregateRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserAggregateRoot");
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.Bug.BugEntity", b =>
                {
                    b.HasOne("VamosTodos_Test.Domain.Project.ProjectAggregateRoot", null)
                        .WithMany("Bugs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VamosTodos_Test.Domain.User.UserAggregateRoot", null)
                        .WithMany("Bugs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("VamosTodos_Test.Domain.Bug.ValueObjects.BugCreationDate", "BugCreationDate", b1 =>
                        {
                            b1.Property<Guid>("BugEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("datetime2")
                                .HasColumnName("BugCreationDate");

                            b1.HasKey("BugEntityId");

                            b1.ToTable("BugEntity");

                            b1.WithOwner()
                                .HasForeignKey("BugEntityId");
                        });

                    b.OwnsOne("VamosTodos_Test.Domain.Bug.ValueObjects.BugDescription", "BugDescription", b1 =>
                        {
                            b1.Property<Guid>("BugEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("BugDescription");

                            b1.HasKey("BugEntityId");

                            b1.ToTable("BugEntity");

                            b1.WithOwner()
                                .HasForeignKey("BugEntityId");
                        });

                    b.Navigation("BugCreationDate")
                        .IsRequired();

                    b.Navigation("BugDescription")
                        .IsRequired();
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.Project.ProjectAggregateRoot", b =>
                {
                    b.OwnsOne("VamosTodos_Test.Domain.Project.ValueObjects.ProjectDescription", "ProjectDescription", b1 =>
                        {
                            b1.Property<Guid>("ProjectAggregateRootId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("ProjectDescription");

                            b1.HasKey("ProjectAggregateRootId");

                            b1.ToTable("ProjectAggregateRoot");

                            b1.WithOwner()
                                .HasForeignKey("ProjectAggregateRootId");
                        });

                    b.OwnsOne("VamosTodos_Test.Domain.Project.ValueObjects.ProjectName", "ProjectName", b1 =>
                        {
                            b1.Property<Guid>("ProjectAggregateRootId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("ProjectName");

                            b1.HasKey("ProjectAggregateRootId");

                            b1.ToTable("ProjectAggregateRoot");

                            b1.WithOwner()
                                .HasForeignKey("ProjectAggregateRootId");
                        });

                    b.Navigation("ProjectDescription")
                        .IsRequired();

                    b.Navigation("ProjectName")
                        .IsRequired();
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.User.UserAggregateRoot", b =>
                {
                    b.OwnsOne("VamosTodos_Test.Domain.User.ValueObjects.FirstName", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("UserAggregateRootId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("FirstName");

                            b1.HasKey("UserAggregateRootId");

                            b1.ToTable("UserAggregateRoot");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateRootId");
                        });

                    b.OwnsOne("VamosTodos_Test.Domain.User.ValueObjects.LastName", "LastName", b1 =>
                        {
                            b1.Property<Guid>("UserAggregateRootId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("LastName");

                            b1.HasKey("UserAggregateRootId");

                            b1.ToTable("UserAggregateRoot");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateRootId");
                        });

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("LastName")
                        .IsRequired();
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.Project.ProjectAggregateRoot", b =>
                {
                    b.Navigation("Bugs");
                });

            modelBuilder.Entity("VamosTodos_Test.Domain.User.UserAggregateRoot", b =>
                {
                    b.Navigation("Bugs");
                });
#pragma warning restore 612, 618
        }
    }
}
